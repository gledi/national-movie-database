# Generated by Django 4.1.3 on 2022-11-17 10:09

import django.db.models.deletion
import django.utils.timezone
import mptt.fields
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("taggit", "0005_auto_20220424_2025"),
    ]

    operations = [
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="movies.genre",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Movie",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="updated at",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                (
                    "slug",
                    models.SlugField(max_length=255, unique=True, verbose_name="slug"),
                ),
                (
                    "year",
                    models.IntegerField(
                        help_text="Movie's release year", verbose_name="year"
                    ),
                ),
                ("plot", models.TextField(blank=True, null=True, verbose_name="plot")),
                (
                    "runtime",
                    models.IntegerField(
                        blank=True,
                        help_text="Movie runtime in minutes",
                        null=True,
                        verbose_name="runtime",
                    ),
                ),
                (
                    "mpaa_rating",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("G", "G - General Audiences"),
                            ("PG", "PG - Parental Guidance Suggesteds"),
                            ("PG-13", "PG-13 - Parents Strongly Cautioned"),
                            ("R", "R - Restricted"),
                            ("NC-17", "NC-17 â€“ Adults Only"),
                        ],
                        max_length=5,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "movie",
                "verbose_name_plural": "movies",
                "db_table": "movies",
            },
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="updated at",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Person's full name",
                        max_length=255,
                        verbose_name="name",
                    ),
                ),
                (
                    "birthdate",
                    models.DateField(blank=True, null=True, verbose_name="birthdate"),
                ),
                ("bio", models.TextField(blank=True, null=True, verbose_name="bio")),
            ],
            options={
                "verbose_name": "person",
                "verbose_name_plural": "people",
                "db_table": "people",
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("role", models.CharField(max_length=255, verbose_name="role")),
                (
                    "actor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="roles",
                        to="movies.person",
                        verbose_name="actor",
                    ),
                ),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="roles",
                        to="movies.movie",
                        verbose_name="movie",
                    ),
                ),
            ],
            options={
                "verbose_name": "role",
                "verbose_name_plural": "roles",
                "db_table": "roles",
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="updated at",
                    ),
                ),
                ("rating", models.IntegerField(verbose_name="rating")),
                (
                    "content",
                    models.TextField(blank=True, null=True, verbose_name="content"),
                ),
                (
                    "is_approved",
                    models.BooleanField(default=False, verbose_name="is approved"),
                ),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="movies.movie",
                        verbose_name="movie",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "review",
                "verbose_name_plural": "reviews",
                "db_table": "reviews",
                "permissions": [("approve_review", "Can approve review")],
            },
        ),
        migrations.AddField(
            model_name="movie",
            name="actors",
            field=models.ManyToManyField(
                related_name="movies", through="movies.Role", to="movies.person"
            ),
        ),
        migrations.AddField(
            model_name="movie",
            name="director",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="movies_directed",
                to="movies.person",
                verbose_name="director",
            ),
        ),
        migrations.AddField(
            model_name="movie",
            name="genre",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="movies",
                to="movies.genre",
                verbose_name="genre",
            ),
        ),
        migrations.AddField(
            model_name="movie",
            name="tags",
            field=taggit.managers.TaggableManager(
                help_text="A comma-separated list of tags.",
                through="taggit.TaggedItem",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
        migrations.AddConstraint(
            model_name="review",
            constraint=models.CheckConstraint(
                check=models.Q(("rating__gte", 1), ("rating__lte", 5)),
                name="chk_reviews_rating",
            ),
        ),
        migrations.AddConstraint(
            model_name="review",
            constraint=models.UniqueConstraint(
                fields=("user", "movie"), name="uq_reviews_user_movie"
            ),
        ),
        migrations.AddConstraint(
            model_name="movie",
            constraint=models.CheckConstraint(
                check=models.Q(("year__gte", 1900)), name="chk_movies_year"
            ),
        ),
        migrations.AddConstraint(
            model_name="movie",
            constraint=models.CheckConstraint(
                check=models.Q(("runtime__gte", 20), ("runtime__lte", 480)),
                name="chk_movies_runtime",
            ),
        ),
    ]
